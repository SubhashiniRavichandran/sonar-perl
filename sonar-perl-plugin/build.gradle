plugins {
    id "java"
    id "eclipse"
    id "com.iadams.sonar-packaging" version "0.1.4"
    id 'com.bmuschko.docker-remote-api' version '2.6.8'
    id 'com.jfrog.bintray' version '1.6'
    id 'maven'
    id 'maven-publish'
}

repositories { 
    jcenter()
}

dependencies { 
    provided 'org.sonarsource.sonarqube:sonar-plugin-api:5.6.3'
    compile 'com.google.guava:guava:18.0'
    testCompile 'junit:junit:4.12'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

allprojects {
    project.version = scmVersion.version
}

group = 'com.github.otrosien'

sonarPackaging {
    serverUrl = 'http://localhost:9000'
    pluginKey = 'perl'
    pluginClass = 'com.github.otrosien.sonar.perl.PerlPlugin'
    pluginName = 'Perl'
    pluginDescription = 'There is more than one camel to do it.'
    pluginParent = null
    pluginLicense = 'Apache'
    requirePlugins = null
    pluginUrl = 'http://github.com/otrosien/sonar-perl'
    pluginIssueTrackerUrl = 'http://github.com/otrosien/sonar-perl/issues'
    pluginTermsConditionsUrl = 'http://github.com/otrosien/sonar-perl'
    pluginSourceUrl = 'http://github.com/otrosien/sonar-perl'
    pluginDevelopers = 'Oliver Trosien'
    skipDependenciesPackaging = false
    useChildFirstClassLoader = false
    basePlugin = ''
    organization{
        name = 'otrosien'
        url = 'http://github.com/otrosien'
    }
}

import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*


docker {
    if (System.env.DOCKER_HOST) {
        url = "$System.env.DOCKER_HOST".replace("tcp","https")
        if (System.env.DOCKER_CERT_PATH) {
            certPath = new File(System.env.DOCKER_CERT_PATH)
        }
    } else {
        url = 'unix:///var/run/docker.sock'
    }
}

task copyDockerfile (type: Copy) {
    group = 'Docker'
    description = 'Copies the Dockerfile into its target directory.'
    from 'Dockerfile'
    into 'build/docker'
}

task copyDockerTargetArtifacts(type: Copy) {
    group = 'Docker'
    description = 'Assembles contents for docker image.'
    dependsOn copyDockerfile, jar
    from "build/libs/"
    into "build/docker/build/libs/"
}

task buildDockerImage(type: DockerBuildImage) {
    description = 'Builds a new docker image.'
    dependsOn copyDockerTargetArtifacts
    inputDir = file('build/docker')
    tag = "otrosien/sonar-perl:latest"
    noCache = true
}

task createDockerContainer(type: DockerCreateContainer) {
    dependsOn buildDockerImage
    targetImageId { buildDockerImage.getImageId() }
    portBindings = [ '9000:9000', '9002:9002' ]
}

build.dependsOn(createDockerContainer)

task startDockerContainer(type: DockerStartContainer) {
    dependsOn createDockerContainer
    targetContainerId { createDockerContainer.getContainerId() }
    doLast {
        println createDockerContainer.getContainerId()
    }
}

task run {}
run.dependsOn(startDockerContainer)

task stopDockerContainer(type: DockerStopContainer) {
    targetContainerId { createDockerContainer.getContainerId() }
}

task stop {}
stop.dependsOn stopDockerContainer

task removeDockerImage (type:DockerRemoveImage) {
    description = 'Removes the docker image from the local filesystem.'
    imageId 'otrosien/sonar-perl:latest'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

model {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifactId 'sonar-perl-plugin'
                groupId = project.group
    
                artifact sourceJar {
                    classifier 'sources'
                }
            }
        }
    }
}

bintray {
    user = project.findProperty('bintrayUser')   ?: System.getenv('BINTRAY_USER')
    key  = project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava','sourceJar']
    publish = true
    pkg {
        repo = "maven"
        name = 'sonar-perl'
        userOrg = 'otrosien'
        websiteUrl = 'https://github.com/otrosien/sonar-perl'
        issueTrackerUrl = 'https://github.com/otrosien/sonar-perl/issues'
        vcsUrl = 'https://github.com/otrosien/sonar-perl.git'
        githubRepo = 'otrosien/sonar-perl'
        githubReleaseNotesFile = 'README.md'
        licenses = ['Apache-2.0']
    }
}
